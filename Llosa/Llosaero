```java
import javax.crypto.Cipher;
import javax.crypto.KeyGenerator;
import javax.crypto.SecretKey;
import javax.crypto.spec.SecretKeySpec;
import java.security.NoSuchAlgorithmException;
import java.util.Base64;

public class iOSecurityExample {

    public static void main(String[] args) {
        try {
            // Generaci√≥n de una clave AES aleatoria
            SecretKey secretKey = generateAESKey();

            // Datos a cifrar
            String plaintext = "Hello, iOS Security!";
            System.out.println("Texto plano: " + plaintext);

            // Cifrar los datos
            String encryptedText = encrypt(plaintext, secretKey);
            System.out.println("Texto cifrado: " + encryptedText);

            // Descifrar los datos
            String decryptedText = decrypt(encryptedText, secretKey);
            System.out.println("Texto descifrado: " + decryptedText);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private static SecretKey generateAESKey() throws NoSuchAlgorithmException {
        KeyGenerator keyGenerator = KeyGenerator.getInstance("AES");
        keyGenerator.init(128);
        return keyGenerator.generateKey();
    }

    private static String encrypt(String plaintext, SecretKey secretKey) throws Exception {
        Cipher cipher = Cipher.getInstance("AES");
        cipher.init(Cipher.ENCRYPT_MODE, secretKey);
        byte[] encryptedBytes = cipher.doFinal(plaintext.getBytes());
        return Base64.getEncoder().encodeToString(encryptedBytes);
    }

    private static String decrypt(String encryptedText, SecretKey secretKey) throws Exception {
        Cipher cipher = Cipher.getInstance("AES");
        cipher.init(Cipher.DECRYPT_MODE, secretKey);
        byte[] encryptedBytes = Base64.getDecoder().decode(encryptedText);
        byte[] decryptedBytes = cipher.doFinal(encryptedBytes);
        return new String(decryptedBytes);
    }
}
```
